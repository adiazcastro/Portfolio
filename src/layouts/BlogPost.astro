---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, category, tags } = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body class="bg-background dark:bg-background-dark transition-colors duration-200">
    <Header category={category} />
    <main>
      <article class="py-16">
        <div class="container">
          <div class="max-w-4xl mx-auto">
            {heroImage && (
              <img 
                src={heroImage} 
                alt={title}
                class="w-full mb-8 rounded-lg shadow-lg"
              />
            )}
            {/* Only show tags, not category */}
            <div class="flex flex-wrap gap-2 mb-6">
              {tags?.map(tag => (
                <span class="px-3 py-1 text-sm font-medium text-primary bg-primary/10 rounded-full">
                  {tag}
                </span>
              ))}
            </div>
            <div class="mb-12 text-center">
              <h1 class="mb-4 text-4xl font-bold text-heading dark:text-heading-dark">{title}</h1>
              <div class="text-secondary">
                <FormattedDate date={pubDate} />
                {updatedDate && (
                  <span class="italic">
                    (Updated on <FormattedDate date={updatedDate} />)
                  </span>
                )}
              </div>
            </div>
            <div class="prose prose-lg mx-auto text-justify dark:prose-invert">
              <slot />
            </div>
          </div>
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>